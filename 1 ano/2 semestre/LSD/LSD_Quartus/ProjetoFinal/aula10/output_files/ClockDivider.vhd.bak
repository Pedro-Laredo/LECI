library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity ClockDivider is
    port(
        clk_in : in std_logic;
        reset : in std_logic;
        clk_out : out std_logic
    );
end ClockDivider;

architecture Behavioral of ClockDivider is
    constant DIVISOR : integer := 50000000;  -- Assuming a 50 MHz input clock
    signal count : integer := 0;
    signal clk_reg : std_logic := '0';
begin
    process(clk_in, reset)
    begin
        if reset = '1' then
            count <= 0;
            clk_reg <= '0';
        elsif rising_edge(clk_in) then
            if count = DIVISOR/2 - 1 then
                clk_reg <= not clk_reg;
                count <= 0;
            else
                count <= count + 1;
            end if;
        end if;
    end process;
    clk_out <= clk_reg;
end Behavioral;